version: '3.7'
x-environment:
  &server-environment
  - ASSET_HOST
  - AWS_ACCESS_KEY_ID
  - AWS_REGION
  - AWS_SECRET_KEY
  - BUNDLE_WITHOUT=test:development
  - DATABASE_URL
  - ENABLE_ADS=1
  - GOOGLE_CLIENT_ID
  - GOOGLE_CLIENT_SECRET
  - NEW_RELIC_LICENSE_KEY
  - NODE_ENV=production
  - PATREON_CLIENT_ID
  - PATREON_CLIENT_SECRET
  - PATREON_WEBHOOK_SECRET
  - RACK_ENV=production
  - RAILS_LOG_TO_STDOUT=true # Log to stdout so docker/docker-compose can take over logs
  - RAILS_SERVE_STATIC_FILES=1
  - RAILS_SKIP_ASSET_COMPILATION=false
  - RAILS_SKIP_MIGRATIONS=false
  - READ_ONLY_MODE=0
  - REDIS_URL
  - ROLLBAR_ACCESS_TOKEN
  - S3_BUCKET
  - SECRET_KEY_BASE
  - SITE_TITLE
  - SKYLIGHT_AUTHENTICATION
  - SPLITSIO_CLIENT_ID
  - SPLITSIO_CLIENT_SECRET
  - TWITCH_CLIENT_ID
  - TWITCH_CLIENT_SECRET
x-logging:
  &default-logging
  driver: json-file
  options:
    max-size: 1m
    max-file: "1"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "rm -f /app/tmp/pids/server.pid && yarn install && bundle exec rails db:migrate && bundle exec rails assets:precompile && bundle exec rails s -p 3000 -b '0.0.0.0'"
    environment: *server-environment
    image: web
    logging: *default-logging
    ports:
      - 3000:3000
    volumes:
      - .:/app
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "rm -f /app/tmp/pids/delayed*.pid && ruby bin/delayed_job run -n 2"
    environment: *server-environment
    image: worker
    logging: *default-logging
    ports: []
