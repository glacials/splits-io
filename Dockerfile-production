ARG RUBY_VERSION
FROM ruby:$RUBY_VERSION-alpine AS prod-builder

# Build base for gem's native extensions
# tzdata for ruby timezone data
# gcompat for ffi to load LSC
RUN echo "http://dl-4.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories \
    && apk update \
    && apk add -u --no-cache build-base vips-dev tzdata gcompat=0.4.0-r0 git postgresql-dev bash yarn \
    && rm -rf /var/cache/apk/*

ENV LANG C.UTF-8
ENV GEM_HOME /bundle
ENV BUNDLE_PATH $GEM_HOME
ENV BUNDLE_APP_CONFIG $BUNDLE_PATH
ENV BUNDLE_BIN $BUNDLE_PATH/bin
# Add bundle dir to path to be able to access commands outside of `bundle exec`
ENV PATH /app/bin:$BUNDLE_BIN:$PATH

ENV RAILS_ENV=production
ENV NODE_ENV=production

RUN gem update --system

RUN mkdir -p /app
WORKDIR /app

COPY Gemfile* package.json yarn.lock ./

RUN bundle install -j "$(expr "$(getconf _NPROCESSORS_ONLN)" - 1)" --without development:test \
    && rm -rf $BUNDLE_PATH/cache/*.gem \
    && find $(bundle list --paths) -name "*.c" -delete \
    && find $(bundle list --paths) -name "*.o" -delete

RUN yarn install
COPY . .
ARG SPLITSIO_CLIENT_ID
ARG STRIPE_PUBLISHABLE_KEY
RUN DATABASE_URL=nulldb://host/db SECRET_KEY_BASE="$(bundle exec rails secret)" \
    REDIS_URL=redis://redis:6379/1 \
    SPLITSIO_CLIENT_ID=$SPLITSIO_CLIENT_ID STRIPE_PUBLISHABLE_KEY=$STRIPE_PUBLISHABLE_KEY \
    bin/rails assets:precompile

RUN rm -rf node_modules/ tmp/cache vendor/assets spec

#############

FROM ruby:$RUBY_VERSION-alpine AS prod-runtime

ENV RAILS_ENV=production \
    NODE_ENV=production \
    LANG=C.UTF-8 \
    GEM_HOME=/bundle
ENV BUNDLE_PATH=$GEM_HOME
ENV BUNDLE_APP_CONFIG=$BUNDLE_PATH \
    BUNDLE_BIN=$BUNDLE_PATH/bin
# Add bundle dir to path to be able to access commands outside of `bundle exec`
ENV PATH=/app/bin:$BUNDLE_BIN:$PATH

RUN echo "http://dl-4.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories \
    && apk update \
    && apk add -u --no-cache vips-dev tzdata gcompat=0.4.0-r0 postgresql-dev bash nodejs-current less \
    && rm -rf /var/cache/apk/*

COPY --from=prod-builder /app /app
COPY --from=prod-builder /bundle /bundle

WORKDIR /app
