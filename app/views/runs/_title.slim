h1 = run.to_s
h5
  span> by
  span = user_badge(run.user)
  - if run.pb?
    .badge
      => icon('fas', 'check')
      span Personal Best
  = render partial: 'runs/timing_badge', locals: {run: run, timing: timing}

ul.run-options
  li
    button#download-link.btn.btn-outline-success.dropdown-toggle href='#' role='button' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false'
      => icon('fas', 'download')
      span Download
    .dropdown-menu.bg-dark aria-labelledby='download-link'
      - timer = Run.program(run.timer)
      a.dropdown-item.text-secondary href=download_path(run, timer.to_sym) = timer
      a.dropdown-item.text-secondary href="https://one.livesplit.org/#/splits-io/#{run.id36}" target='_blank' LiveSplit One
      - (Run.exportable_programs - [timer]).each do |timer|
        a.dropdown-item.text-secondary href=download_path(run, timer.to_sym) = timer
    - if run.category
      - if !run.belongs_to?(current_user) && current_user.try(:runs?, run.category)
        li
          a.btn.btn-outline-light href=compare_path(current_user.pb_for(run.category), run)
            => icon('fas', 'chart-bar')
            span Compare to Mine
      - if run.belongs_to?(current_user) && run != (run.category.best_known_run(timing) || run)
        li
          a.btn.btn-outline-success  href=compare_path(run, run.category.best_known_run(timing))
            => icon('fas', 'chart-bar')
            span Compare to Best on Site
  li
    a.btn.btn-outline-success href=run_stats_path(run, params: {timing: params[:timing]})
      => icon('fas', 'chart-pie')
      span Stats
  - if run.srdc_id.present?
    li
      a.btn.btn-outline-light target='_blank' href=run.srdc_url
        => icon('fas', 'trophy')
        span Speedrun.com
  - if run.video_url.present?
    - uri = URI.parse(run.video_url)
    li
      a.btn.btn-outline-light target='_blank' href=run.video_url
        - if uri.host.match?(/^(www\.)?(twitch\.tv)$/)
          => icon('fab', 'twitch')
        - elsif uri.host.match?(/^(www\.)?(youtube\.com|youtu\.be)$/)
          => icon('fab', 'youtube')
        - else
          => icon('fas', 'video')
        span Video
  - if can?(:edit, run)
    li
      a.btn.btn-outline-success href=edit_run_path(run)
        => icon('fas', 'edit')
        span Edit
  - if run.user.nil?
    li#claim-nav-link-container style='display: none;'
      - if current_user.present?
        a#claim-nav-link.btn.btn-outline-success href='#' data-confirm="Claim this run as #{current_user}?"
          => icon('fas', 'user-check')
          span Claim
      - else
        button.btn.btn-outline-secondary disabled=true Sign In to Claim
