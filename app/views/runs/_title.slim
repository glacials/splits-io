h1 = run.to_s
h5
  - if run.user.try(:name)
    span> by
    span = user_badge(run.user)
    .badge
      i.fas.fa-check>
      span Personal Best
  = render partial: 'runs/timing_badge', locals: {run: run, timing: timing}

ul.run-options
  li
    button#download-link.btn.btn-outline-success.dropdown-toggle href='#' role='button' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false'
      i.fas.fa-download>
      span Download
    .dropdown-menu.bg-dark aria-labelledby='download-link'
      - timer = Run.program(run.timer)
      a.dropdown-item.text-secondary href=download_path(run, timer.to_sym) = timer
      a.dropdown-item.text-secondary href="https://one.livesplit.org/#/splits-io/#{run.id36}" target='_blank' LiveSplit One
      - (Run.exportable_programs - [timer]).each do |timer|
        a.dropdown-item.text-secondary href=download_path(run, timer.to_sym) = timer
    - if run.category
      - if !run.belongs_to?(current_user) && current_user.try(:runs?, run.category)
        li
          a.btn.btn-outline-light href=compare_path(current_user.pb_for(run.category), run)
            i.fas.fa-chart-bar>
            span Compare to mine
      - if run.belongs_to?(current_user) && run != (run.category.best_known_run(timing) || run)
        li
          a.btn.btn-outline-success  href=compare_path(run, run.category.best_known_run(timing))
            i.fas.fa-chart-bar>
            span Compare to Best on Site
  li
    a.btn.btn-outline-success href=run_stats_path(run, params: {timing: params[:timing]})
      i.fas.fa-chart-pie>
      span Stats
  - if run.srdc_id.present?
    li
      a.btn.btn-outline-light target='_blank' href=run.srdc_url
        i.fas.fa-trophy>
        span Speedrun.com
  - if run.video_url.present?
    - uri = URI.parse(run.video_url)
    li
      a.btn.btn-outline-light target='_blank' href=run.video_url
        - if uri.host.match?(/^(www\.)?(twitch\.tv)$/)
          i.fab.fa-twitch>
        - elsif uri.host.match?(/^(www\.)?(youtube\.com|youtu\.be)$/)
          i.fab.fa-youtube>
        - else
          i.fas.fa-video>
        span Video
  - if can?(:edit, run)
    li
      a.btn.btn-outline-success href=edit_run_path(run)
        i.fas.fa-edit>
        span Edit
  - if run.user.nil?
    li#claim-nav-link-container style='display: none;'
      - if current_user.present?
        = link_to("claim", '#', id: 'claim-nav-link', data: {confirm: "Claim this run as #{current_user}?"})
      - else
        = link_to("sign in to claim", '/auth/twitch')

article#claim-prompt style='display: none;'
  .col-lg-6.offset-lg-3
    .card
      .card-header.text-white
        | Claim This Run Like a Broken Headlight
        button#dismiss-claim-prompt type='button' class='close'
          span aria-hidden='true'
            span = icon("fas", "times")
          span class='sr-only' Close
      .card-body
        - if current_user.nil?
          p
            a href='/auth/twitch' Sign in
            span< to claim this run.
        - else
          p You uploaded this run while logged out.
          p
            | You can claim it to your account if you'd like (
            b = current_user.twitch_display_name
            | ).
          p
            .col-lg-12
              .col-lg-4.offset-lg-4
                a.btn.btn-success.btn-block#claim-prompt-button href='#'
                  b Claim!
