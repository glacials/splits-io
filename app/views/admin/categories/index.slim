/ ## Local variables:
/
/ - `page`:
/   An instance of [Administrate::Page::Collection][1].
/   Contains helper methods to help display a table,
/   and knows which attributes should be displayed in the resource's table.
/ - `resources`:
/   An instance of `ActiveRecord::Relation` containing the resources
/   that match the user's search criteria.
/   By default, these resources are passed to the table partial to be displayed.
/ - `search_term`:
/   A string containing the term the user has searched for, if any.
/ - `show_search_bar`:
/   A boolean that determines if the search bar should be shown.
/
/ [1]: http://www.rubydoc.info/gems/administrate/Administrate/Page/Collection

- content_for(:title) do
  = display_resource_name(page.resource_name)

header.main-content__header role='banner'
  h1#page-title.main-content__page-title
    = content_for(:title)
  h2 Total #{number_with_delimiter(Category.count)}

  - if show_search_bar
    = render('search', search_term: search_term, resource_name: display_resource_name(page.resource_name))

  div
    - if valid_action?(:new) && show_action?(:new, new_resource)
      = link_to( \
        t('administrate.actions.new_resource', name: page.resource_name.titleize.downcase),
        [:new, namespace, page.resource_path],
        class: "button",
      )

section.main-content__body.main-content__body--flush
  = line_chart(Category.group_by_month(:created_at).count, xtitle: 'Time', ytitle: 'New categories per month', current: false)
  = render( \
    'collection', \
    collection_presenter: page, \
    collection_field_name: resource_name, \
    page: page, \
    resources: resources, \
    table_title: 'page-title' \
  )

  = paginate resources
