- content_for(:title, 'Settings')
- content_for(:header)
  ol.breadcrumb.shadow
    li.breadcrumb-item = link_to(site_title, root_path)
    li.breadcrumb-item = link_to('Settings', settings_path)
  h2 Settings
- if current_user.nil?
  article You need to be signed in to view this page.
- else
  article
    .card.mb-3: form action=settings_path method='POST'
      .card-header.text-white My Username
      .card-body
        .row
          .col-md-6
            .mb-3: input.form-control type='text' name='user[name]' value=current_user.name
            .card
              .card-body
                p
                  ' Letters, numbers, underscores. (For nerds:
                  code = User::NAME_REGEX.inspect
                  | .)
                p Capitalization matters for display, but URLs will always be lowercase.
          .col-md-6: .alert.alert-warning
            - sample_run = current_user.runs.last || Run.random
            b Changing your username breaks these links:
            ul
              li: code: a href=user_path(current_user) = request.host_with_port + user_path(current_user)
              li: code: a href=short_user_path(current_user) = request.host_with_port + short_user_path(current_user)
              li
                | permalink redirectors (patrons only)
                - if current_user.runs.any?
                  ' , e.g.
                  code: a href=user_pb_path(sample_run.user, sample_run.game, sample_run.category)
                    = request.host_with_port + user_pb_path(sample_run.user, sample_run.game, sample_run.category)
            b These links are safe:
            ul: li
              | All standard permalinks, e.g.
              code: a href=run_path(sample_run) = request.host_with_port + run_path(sample_run)
            b> Changing only capitalization is safe
            | and has none of the above effects.
      .card-footer.clearfix: .float-right: input.btn.btn-success type='submit' value='Save'
    .card-deck.mb-3
      - if current_user.twitch.nil?
        .card.border-twitch
          .card-body.text-light
            span> ✗ Not linked with Twitch
          .card-footer
            .float-right
              a.btn.btn-outline-light href='/auth/twitch' Link with Twitch
      - else
        .card.bg-twitch
          .card-body.text-light
            span ✓ Linked with Twitch as
            b< = current_user.twitch.display_name
          .card-footer
            .float-right
              - if current_user.google.present?
                a.btn.btn-outline-light href='/auth/twitch/unlink' Unlink
              - else
                i.btn.btn-outline-light.disabled.tip-top(
                  style='cursor: not-allowed'
                  title='You need at least one link to be able to sign in! Link Google to unlink Twitch.'
                ) Not unlinkable
      - if current_user.google.nil?
        .card.border-google
          .card-body
            span> ✗ Not linked with Google
          .card-footer
            .float-right
              a.btn.btn-outline-light href='/auth/google' Link with Google
      - else
        .card.bg-google
          .card-body.text-light
            span ✓ Linked with Google as
            b< = current_user.google.name
          .card-footer
            .float-right
              - if current_user.twitch.present?
                a.btn.btn-outline-light href='/auth/google/unlink' Unlink
              - else
                i.btn.btn-outline-light.disabled.tip-top(
                  style='cursor: not-allowed'
                  title='You need at least one link to be able to sign in! Link Twitch to unlink Google.'
                ) Not unlinkable
      - if current_user.patreon.nil?
        .card.border-patreon
          .card-body
            span> ✗ Not linked with Patreon
          .card-footer
            .float-right
              a.btn.btn-outline-light.mr-2 href='/auth/patreon' Link with Patreon
              a.btn.btn-light> href='https://www.patreon.com/glacials' Visit
      - else
        .card.bg-patreon
          .card-body.text-light
            span ✓ Linked with Patreon as
            b< = current_user.patreon.full_name
          .card-footer
            .float-right
              a.btn.btn-outline-light.mr-2 href='/auth/patreon/unlink' Unlink
              a.btn.btn-light href='https://www.patreon.com/glacials' Visit
              - if current_user.gold_patron?
                a.btn.btn-secondary href=tools_path Redirectors
    .card.mb-3
      .card-header.text-white My Authorized Applications
      .card-body
        - if current_user.access_tokens.count == 0
          i There are no applications authorized to use your account.
        - else
          p These applications have partial access to your account.
          .table-responsive
            table.table.table-striped.table-hover.mb-0
              thead
                tr
                  th Name
                  th Permissions granted
                  th Authorized
                  th
              tbody
                - Doorkeeper::Application.authorized_for(current_user).each do |application|
                  - auth = Doorkeeper::AccessToken.find_by(resource_owner_id: current_user, application: application)
                  tr
                    td
                      big = application.name
                    td
                      ul
                        - auth.scopes.all.each do |scope|
                          li = scope_to_sentence(scope)
                    td
                      div title=auth.created_at #{time_ago_in_words(auth.created_at)} ago
                    td
                      = button_to authorization_path(application.id), class: 'btn btn-primary', method: :delete, data: {\
                        confirm: "Really revoke permissions from #{application.name}?"\
                      }
                        span = icon('fas', 'times')
    .card.mb-3
      a.card-header.text-white name='applications' My Developer Applications
      .card-body
        .btn-group
          a.btn.btn-primary href='/settings/applications/new'
            => icon('fas', 'plus')
            span Create Application
          a.btn.btn-secondary target='_blank' href='https://github.com/glacials/splits-io/blob/master/docs/api.md#user-authentication-and-authorization'
            => icon('fas', 'file')
            span View Documentation
        - if current_user.applications.empty?
          article
            p If you're a developer of an application like a timer, you can use this section to upload runs on behalf of
              your users.
            p If you're not a developer, you can ignore this section.
        - else
          p
            .table-responsive
              table.table.table-striped.table-hover.mb-0
                thead
                  tr
                    th Name
                    th Active Tokens
                    th Redirect URI
                    th Client ID
                    th
                      span> Client Secret &mdash;
                      small.text-warning
                        span = icon('fas', 'clock')
                        span< Hides forever after 24 hours
                    th
                tbody
                  - current_user.applications.each do |application|
                    tr
                      td
                        big = application.name
                      td = application.access_tokens.count
                      td
                        code = application.redirect_uri
                      td
                        .input-group
                          input.form-control id="client-id-#{application.uid}" type='text' value=application.uid readonly=1
                          .input-group-append
                            .btn.btn-primary.clipboard-btn data-clipboard-target="#client-id-#{application.uid}"
                              span#copy = icon('fas', 'copy')
                              span#copied style='display: none;' = icon('fas', 'check')
                      td
                        - if (Time.now.utc - 24.hours) > application.secret_generated_at
                          button.btn.btn-secondary.btn-block disabled=true Hidden forever
                        - else
                          .input-group
                            input.form-control id="client-secret-#{application.uid}" type='text' value=application.secret readonly=1
                            .input-group-append
                              .btn.btn-primary.clipboard-btn data-clipboard-target="#client-secret-#{application.uid}"
                                span#copy = icon('fas', 'copy')
                                span#copied style='display: none;' = icon('fas', 'check')
                      coffee:
                        clipboard = new Clipboard('.clipboard-btn')
                        clipboard.on('success', (e) ->
                          e.trigger.children[0].style.display = 'none'
                          e.trigger.children[1].style.display = 'inline-block'
                          setTimeout(->
                            e.trigger.children[0].style.display = 'inline-block'
                            e.trigger.children[1].style.display = 'none'
                          , 4000)
                        )
                      td
                        a.btn.btn-outline-success href=edit_application_path(application)
                          span = icon('fas', 'edit')
                      td.border-danger.border-left
                        = button_to(application_path(application), class: 'btn btn-outline-danger', method: :delete, \
                          data: { \
                            confirm: "Really delete #{application.name}? This will also revoke all \
                                      #{application.access_tokens.count} authorizations and invalidate the associated \
                                      tokens." \
                          })
                          span = icon('fas', 'times')
    #delete.accordian
      .card
        #delete-header.card-header
          h5.mb-0
            button.btn.btn-link type='button' data-toggle='collapse' data-target='#delete-body' aria-expanded='true' aria-controls='delete-body'
              span Delete My Account
        #delete-body.collapse aria-labelledby='delete-header' data-parent='delete'
          .card-body
            p If you like, you can permanently delete your account on Splits I/O. You can recreate it later by signing in with
              Twitch again, but it will be a fresh account with no runs.
            p You can choose to cascade this deletion to all your runs, or to disown them instead. Disowned runs do not
              belong to any user and will not be claimable, even if you recreate your account. Your name will not appear
              on them and Splits I/O will not remember that they belonged to you, even internally.
            p This is a hard delete. No one can restore your account if you change your mind.
            .row
              .col-lg
                .center
                  = button_to settings_path, method: :delete, data: {confirm: "Really delete your account (#{current_user})? Your existing runs will be permanently deleted."}, params: {destroy_runs: '1'}, class: 'button btn btn-danger'
                    div
                      big Delete my account
                    small Deleting #{current_user.runs.count} runs (#{current_user.pbs.count} PBs) across #{current_user.games.count} games with it
              .col-lg
                .center
                  = button_to settings_path, method: :delete, data: {confirm: "Really delete your account (#{current_user})? Your existing runs will be disowned."}, class: 'button btn btn-danger'
                    div
                      big Delete my account
                    small Keeping all runs, but anonymizing them permanently
