- content_for(:title, @race)

- content_for(:header) do
  ol.breadcrumb.shadow
    li.breadcrumb-item = link_to(site_title, root_path)
    li.breadcrumb-item = link_to('Games', games_path)
    li.breadcrumb-item = link_to(@race.game, game_path(@race.game))
    - if @race.try(:category)
      li.breadcrumb-item = link_to(@race.category, game_category_path(@race.game, @race.category))
      li.breadcrumb-item = link_to(@race.type.to_s.capitalize.pluralize, game_category_path(@race.game, @race.category))
    - else
      li.breadcrumb-item = link_to(@race.type.to_s.capitalize.pluralize, game_path(@race.game))
    li.breadcrumb-item.active = link_to(@race.to_param, polymorphic_path(@race))

#vue-race
  race inline-template=true raceable-type=@race.type raceable-id=@race.id
    div
      .text-center v-if="loading" = render partial: 'shared/spinner'
      div v-show="!loading"
        .row.mx-2
          .col-md-6 = render partial: 'races/title', locals: {race: @race}
          #stats-box.col-md-6 = render partial: 'races/stats', locals: {race: @race}

        .row.mx-1.mt-3
          .col-md-6
            #entries-table.card.shadow.my-3
              = render partial: 'races/entries_table', locals: {race: @race}
          .col-md-6
            .card.shadow.my-3#chat-card
              .list-group.list-group-flush style='max-height: 500px; overflow-y: auto'
                - unless @race.locked?
                  race-chat inline-template=true v-if='raceable' :raceable='raceable'
                    .list-group-item#input-list-item.p-0
                      = form_for(:chat, remote: true, html: {onsubmit: 'event.preventDefault()'}) do |f|
                        .input-group
                          input.form-control#input-chat-text(
                            autofocus=true
                            :disabled='loading'
                            name='body'
                            placeholder='Chat...'
                            type='text'
                            v-model='body'
                          )
                          .input-group-append
                            button.btn.btn-dark#chat-submit(
                              :disabled='loading'
                              :title='error'
                              type='submit'
                              @click='chat'
                              v-tippy=true
                            )
                              template v-if='loading' = render partial: 'shared/spinner'
                              span.text-danger v-else-if='error' => icon('fas', 'exclamation-triangle')
                              template v-else=true => icon('fas', 'comment')
                  - @race.chat_messages.each do |msg|
                    = render partial: 'chat_messages/show', locals: {chat_message: msg}
                  .list-group-item.p-0
                    .media
                      img.mr-3 src=asset_path('logo-darkbg-breathingroom.png') width=25 height=25
                      .media-body
                        span.mr-2: .badge.badge-success Splits.io
                        i Race created
                        .float-right.pr-2
                          = render partial: 'shared/relative_time', locals: {time: @race.created_at}
        - if @race.randomizer?
          .col-md-6
            race-disclaimer.card.shadow.my-3 inline-template=true
              div
                .bg-dark.p-4 v-if='!accepted'
                  p
                    ' Attachments are uploaded by the race creator. Do not download any attachments
                    ul
                      li that you do not recognize as necessary for your randomizer,
                      li that are executable files, or
                      li if you do not both know and trust the race creator.
                    ' Splits.io is not affiliated with any attachment content and is not responsible for attachments
                    ' or their effects.
                  button.btn.btn-outline-light @click='accept' I understand
                div v-if='accepted'
                  h6.card-header Attachments
                  #attachments = render partial: 'races/attachments', locals: {race: @race}
                  - if @race.belongs_to?(current_user) && !@race.started?
                    .card-footer
                      = form_for(@race, url: api_v4_randomizer_path(@race), remote: true, method: 'PATCH', html: { \
                        class: 'w-100 d-flex justify-content-between auth-me' \
                      }) do |f|
                        = f.file_field(:attachments, multiple: true, direct_upload: true, class: 'form-control-file')
                        = f.submit('Attach', class: 'btn btn-outline-light')
