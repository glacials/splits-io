version: '3.7'
x-environment:
  &server-environment
  - AWS_REGION=local
  - AWS_ACCESS_KEY_ID=beep
  - AWS_SECRET_KEY=boop
  - BUNDLE_APP_CONFIG=bundle
  - BUNDLE_BIN="bundle/bin"
  - BUNDLE_PATH=bundle
  - ENABLE_ADS=0
  - GEM_HOME=bundle
  - GOOGLE_CLIENT_ID
  - GOOGLE_CLIENT_SECRET
  - NODE_ENV=development
  - PATREON_CLIENT_ID
  - PATREON_CLIENT_SECRET
  - QUEUES=discover_runner,highlight_cleanup,race_cleanup,refresh_game,sync_user_follows,v4_races # also update docker-compose-production.yml
  - RAILS_LOG_TO_STDOUT=true # Log to stdout so docker/docker-compose can take over logs
  - RAILS_ENV
  - RAILS_ROOT="/app"
  - READ_ONLY_MODE=0
  - REDIS_URL="redis/0"
  - S3_BUCKET=splits-io
  - SITE_TITLE=Splits.io (Local)
  - SPLITSIO_CLIENT_ID
  - SPLITSIO_CLIENT_SECRET
  - TWITCH_CLIENT_ID
  - TWITCH_CLIENT_SECRET
x-logging:
  &default-logging
  driver: json-file
  options:
    max-size: 1m
    max-file: "1"
x-app: &app
  build:
    context: .
    dockerfile: Dockerfile
  tmpfs:
    - /tmp
x-backend: &backend
  <<: *app
  stdin_open: true
  tty: true
  volumes:
    - .:/app
    - bundle:/bundle
    - ./node_modules:/app/node_modules
    - packs:/app/public/packs
    - rails_cache:/app/tmp/cache
  depends_on:
    - db
    - s3
    - redis

services:
  db:
    image: postgres:11.5-alpine
    logging: *default-logging
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/10-init.sql
      - db:/var/lib/postgresql/data
  s3:
    image: lphoward/fake-s3
    logging: *default-logging
    ports:
      - 4569:4569
    volumes:
      - s3:/fakes3_root
  webpacker:
    <<: *app
    command: bash -c "yarn install && ruby bin/webpack-dev-server"
    environment:
      - SPLITSIO_CLIENT_ID
    image: webpacker
    logging: *default-logging
    ports:
      - 3035:3035
    volumes:
      - .:/app
      - bundle:/bundle
      - ./node_modules:/app/node_modules
      - packs:/app/public/packs
  web:
    <<: *backend
    command: bash -c "rm -f /app/tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    environment: *server-environment
    image: web
    logging: *default-logging
    ports:
      - 3000:3000
  worker:
    <<: *backend
    command: bash -c "rm -f /app/tmp/pids/delayed*.pid && bundle exec rake jobs:work"
    environment: *server-environment
    image: worker
    logging: *default-logging
  redis:
    image: redis:5.0.5-alpine
    logging: *default-logging
    volumes:
      - redis:/data

volumes:
  db:
  redis:
  s3:
  bundle:
  packs:
  rails_cache:
